//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace eZdravaIshrana_API.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class eZdravaIshranaEntities : DbContext
    {
        public eZdravaIshranaEntities()
            : base("name=eZdravaIshranaEntities")
        {
            this.Configuration.ProxyCreationEnabled = false;
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Dobavljaci> Dobavljaci { get; set; }
        public virtual DbSet<Korisnici> Korisnici { get; set; }
        public virtual DbSet<KorisniciUloge> KorisniciUloge { get; set; }
        public virtual DbSet<NarudzbaStavke> NarudzbaStavke { get; set; }
        public virtual DbSet<Ocjene> Ocjene { get; set; }
        public virtual DbSet<Proizvodi> Proizvodi { get; set; }
        public virtual DbSet<Proizvodjac> Proizvodjac { get; set; }
        public virtual DbSet<SortaProizvoda> SortaProizvoda { get; set; }
        public virtual DbSet<Ulazi> Ulazi { get; set; }
        public virtual DbSet<UlazStavke> UlazStavke { get; set; }
        public virtual DbSet<Uloge> Uloge { get; set; }
        public virtual DbSet<VrsteProizvoda> VrsteProizvoda { get; set; }
        public virtual DbSet<Skladista> Skladista { get; set; }
        public virtual DbSet<OcjeneDostavljaca> OcjeneDostavljaca { get; set; }
        public virtual DbSet<Narudzbe> Narudzbe { get; set; }
        public virtual DbSet<Ambalaza> Ambalaza { get; set; }
        public virtual DbSet<AmbalazaStavke> AmbalazaStavke { get; set; }
        public virtual DbSet<IzlazStavke> IzlazStavke { get; set; }
        public virtual DbSet<Izlazi> Izlazi { get; set; }
        public virtual DbSet<Dostavljaci> Dostavljaci { get; set; }
        public virtual DbSet<Kupci> Kupci { get; set; }
    
        public virtual ObjectResult<Nullable<decimal>> esp_Korisnici_Insert(string ime, string prezime, string email, string telefon, string korisnickoIme, string lozinkaSalt, string lozinkaHash)
        {
            var imeParameter = ime != null ?
                new ObjectParameter("Ime", ime) :
                new ObjectParameter("Ime", typeof(string));
    
            var prezimeParameter = prezime != null ?
                new ObjectParameter("Prezime", prezime) :
                new ObjectParameter("Prezime", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var telefonParameter = telefon != null ?
                new ObjectParameter("Telefon", telefon) :
                new ObjectParameter("Telefon", typeof(string));
    
            var korisnickoImeParameter = korisnickoIme != null ?
                new ObjectParameter("KorisnickoIme", korisnickoIme) :
                new ObjectParameter("KorisnickoIme", typeof(string));
    
            var lozinkaSaltParameter = lozinkaSalt != null ?
                new ObjectParameter("LozinkaSalt", lozinkaSalt) :
                new ObjectParameter("LozinkaSalt", typeof(string));
    
            var lozinkaHashParameter = lozinkaHash != null ?
                new ObjectParameter("LozinkaHash", lozinkaHash) :
                new ObjectParameter("LozinkaHash", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("esp_Korisnici_Insert", imeParameter, prezimeParameter, emailParameter, telefonParameter, korisnickoImeParameter, lozinkaSaltParameter, lozinkaHashParameter);
        }
    
        public virtual ObjectResult<Korisnici> esp_Korisnici_SelectByImePrezime(string imePrezime)
        {
            var imePrezimeParameter = imePrezime != null ?
                new ObjectParameter("ImePrezime", imePrezime) :
                new ObjectParameter("ImePrezime", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Korisnici>("esp_Korisnici_SelectByImePrezime", imePrezimeParameter);
        }
    
        public virtual ObjectResult<Korisnici> esp_Korisnici_SelectByImePrezime(string imePrezime, MergeOption mergeOption)
        {
            var imePrezimeParameter = imePrezime != null ?
                new ObjectParameter("ImePrezime", imePrezime) :
                new ObjectParameter("ImePrezime", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Korisnici>("esp_Korisnici_SelectByImePrezime", mergeOption, imePrezimeParameter);
        }
    
        public virtual int esp_KorisniciUloge_Insert(Nullable<int> korisnikID, Nullable<int> ulogaID)
        {
            var korisnikIDParameter = korisnikID.HasValue ?
                new ObjectParameter("KorisnikID", korisnikID) :
                new ObjectParameter("KorisnikID", typeof(int));
    
            var ulogaIDParameter = ulogaID.HasValue ?
                new ObjectParameter("UlogaID", ulogaID) :
                new ObjectParameter("UlogaID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("esp_KorisniciUloge_Insert", korisnikIDParameter, ulogaIDParameter);
        }
    
        public virtual ObjectResult<esp_Proizvodi_Pretraga_Result> esp_Proizvodi_Pretraga(string naziv, string sifra, Nullable<decimal> cijena, Nullable<int> vrstaID, Nullable<int> sortaID, Nullable<int> proizvodjacID)
        {
            var nazivParameter = naziv != null ?
                new ObjectParameter("Naziv", naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var sifraParameter = sifra != null ?
                new ObjectParameter("Sifra", sifra) :
                new ObjectParameter("Sifra", typeof(string));
    
            var cijenaParameter = cijena.HasValue ?
                new ObjectParameter("Cijena", cijena) :
                new ObjectParameter("Cijena", typeof(decimal));
    
            var vrstaIDParameter = vrstaID.HasValue ?
                new ObjectParameter("VrstaID", vrstaID) :
                new ObjectParameter("VrstaID", typeof(int));
    
            var sortaIDParameter = sortaID.HasValue ?
                new ObjectParameter("SortaID", sortaID) :
                new ObjectParameter("SortaID", typeof(int));
    
            var proizvodjacIDParameter = proizvodjacID.HasValue ?
                new ObjectParameter("ProizvodjacID", proizvodjacID) :
                new ObjectParameter("ProizvodjacID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<esp_Proizvodi_Pretraga_Result>("esp_Proizvodi_Pretraga", nazivParameter, sifraParameter, cijenaParameter, vrstaIDParameter, sortaIDParameter, proizvodjacIDParameter);
        }
    
        public virtual ObjectResult<KorisniciUloge> esp_KorisniciUloge_SelectByID(Nullable<int> korisnikID)
        {
            var korisnikIDParameter = korisnikID.HasValue ?
                new ObjectParameter("KorisnikID", korisnikID) :
                new ObjectParameter("KorisnikID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<KorisniciUloge>("esp_KorisniciUloge_SelectByID", korisnikIDParameter);
        }
    
        public virtual ObjectResult<KorisniciUloge> esp_KorisniciUloge_SelectByID(Nullable<int> korisnikID, MergeOption mergeOption)
        {
            var korisnikIDParameter = korisnikID.HasValue ?
                new ObjectParameter("KorisnikID", korisnikID) :
                new ObjectParameter("KorisnikID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<KorisniciUloge>("esp_KorisniciUloge_SelectByID", mergeOption, korisnikIDParameter);
        }
    
        public virtual int esp_KorisniciUloge_DeleteByID(Nullable<int> korisnikID, Nullable<int> ulogaID)
        {
            var korisnikIDParameter = korisnikID.HasValue ?
                new ObjectParameter("KorisnikID", korisnikID) :
                new ObjectParameter("KorisnikID", typeof(int));
    
            var ulogaIDParameter = ulogaID.HasValue ?
                new ObjectParameter("UlogaID", ulogaID) :
                new ObjectParameter("UlogaID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("esp_KorisniciUloge_DeleteByID", korisnikIDParameter, ulogaIDParameter);
        }
    
        public virtual ObjectResult<esp_Dobavljaci_Pretraga_Result> esp_Dobavljaci_Pretraga(string naziv, Nullable<int> brojNarudzbi)
        {
            var nazivParameter = naziv != null ?
                new ObjectParameter("Naziv", naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var brojNarudzbiParameter = brojNarudzbi.HasValue ?
                new ObjectParameter("BrojNarudzbi", brojNarudzbi) :
                new ObjectParameter("BrojNarudzbi", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<esp_Dobavljaci_Pretraga_Result>("esp_Dobavljaci_Pretraga", nazivParameter, brojNarudzbiParameter);
        }
    
        public virtual ObjectResult<esp_Ulazi_Dobavljaca_Result> esp_Ulazi_Dobavljaca(Nullable<int> dobavljacID)
        {
            var dobavljacIDParameter = dobavljacID.HasValue ?
                new ObjectParameter("DobavljacID", dobavljacID) :
                new ObjectParameter("DobavljacID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<esp_Ulazi_Dobavljaca_Result>("esp_Ulazi_Dobavljaca", dobavljacIDParameter);
        }
    
        public virtual ObjectResult<esp_UlaziStavke_byUlazID_Result> esp_UlaziStavke_byUlazID(Nullable<int> ulazID)
        {
            var ulazIDParameter = ulazID.HasValue ?
                new ObjectParameter("UlazID", ulazID) :
                new ObjectParameter("UlazID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<esp_UlaziStavke_byUlazID_Result>("esp_UlaziStavke_byUlazID", ulazIDParameter);
        }
    
        public virtual ObjectResult<esp_Proizvodjac_Pretraga_Result> esp_Proizvodjac_Pretraga(string imePrezime, string proizvodNaziv, Nullable<int> sortaID)
        {
            var imePrezimeParameter = imePrezime != null ?
                new ObjectParameter("ImePrezime", imePrezime) :
                new ObjectParameter("ImePrezime", typeof(string));
    
            var proizvodNazivParameter = proizvodNaziv != null ?
                new ObjectParameter("ProizvodNaziv", proizvodNaziv) :
                new ObjectParameter("ProizvodNaziv", typeof(string));
    
            var sortaIDParameter = sortaID.HasValue ?
                new ObjectParameter("SortaID", sortaID) :
                new ObjectParameter("SortaID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<esp_Proizvodjac_Pretraga_Result>("esp_Proizvodjac_Pretraga", imePrezimeParameter, proizvodNazivParameter, sortaIDParameter);
        }
    
        public virtual ObjectResult<Proizvodjac> esp_Proizvodjac_Pretraga2(string imePrezime)
        {
            var imePrezimeParameter = imePrezime != null ?
                new ObjectParameter("ImePrezime", imePrezime) :
                new ObjectParameter("ImePrezime", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Proizvodjac>("esp_Proizvodjac_Pretraga2", imePrezimeParameter);
        }
    
        public virtual ObjectResult<Proizvodjac> esp_Proizvodjac_Pretraga2(string imePrezime, MergeOption mergeOption)
        {
            var imePrezimeParameter = imePrezime != null ?
                new ObjectParameter("ImePrezime", imePrezime) :
                new ObjectParameter("ImePrezime", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Proizvodjac>("esp_Proizvodjac_Pretraga2", mergeOption, imePrezimeParameter);
        }
    
        public virtual ObjectResult<Kupci> esp_Kupci_SelectByImePrezime(string imePrezime)
        {
            var imePrezimeParameter = imePrezime != null ?
                new ObjectParameter("ImePrezime", imePrezime) :
                new ObjectParameter("ImePrezime", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Kupci>("esp_Kupci_SelectByImePrezime", imePrezimeParameter);
        }
    
        public virtual ObjectResult<Kupci> esp_Kupci_SelectByImePrezime(string imePrezime, MergeOption mergeOption)
        {
            var imePrezimeParameter = imePrezime != null ?
                new ObjectParameter("ImePrezime", imePrezime) :
                new ObjectParameter("ImePrezime", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Kupci>("esp_Kupci_SelectByImePrezime", mergeOption, imePrezimeParameter);
        }
    
        public virtual ObjectResult<esp_UlazStavkeByUlazID_Prikazi_Result> esp_UlazStavkeByUlazID_Prikazi(Nullable<int> ulazID)
        {
            var ulazIDParameter = ulazID.HasValue ?
                new ObjectParameter("UlazID", ulazID) :
                new ObjectParameter("UlazID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<esp_UlazStavkeByUlazID_Prikazi_Result>("esp_UlazStavkeByUlazID_Prikazi", ulazIDParameter);
        }
    
        public virtual ObjectResult<esp_Skadiste_Pretraga_Result> esp_Skadiste_Pretraga(string adresa, string proizvod, Nullable<int> vrstaID, Nullable<int> sortaID)
        {
            var adresaParameter = adresa != null ?
                new ObjectParameter("Adresa", adresa) :
                new ObjectParameter("Adresa", typeof(string));
    
            var proizvodParameter = proizvod != null ?
                new ObjectParameter("Proizvod", proizvod) :
                new ObjectParameter("Proizvod", typeof(string));
    
            var vrstaIDParameter = vrstaID.HasValue ?
                new ObjectParameter("VrstaID", vrstaID) :
                new ObjectParameter("VrstaID", typeof(int));
    
            var sortaIDParameter = sortaID.HasValue ?
                new ObjectParameter("SortaID", sortaID) :
                new ObjectParameter("SortaID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<esp_Skadiste_Pretraga_Result>("esp_Skadiste_Pretraga", adresaParameter, proizvodParameter, vrstaIDParameter, sortaIDParameter);
        }
    
        public virtual ObjectResult<esp_Ulazi_Pretraga_Result> esp_Ulazi_Pretraga(Nullable<System.DateTime> datumod, Nullable<System.DateTime> datumdo, Nullable<int> skladisteID)
        {
            var datumodParameter = datumod.HasValue ?
                new ObjectParameter("Datumod", datumod) :
                new ObjectParameter("Datumod", typeof(System.DateTime));
    
            var datumdoParameter = datumdo.HasValue ?
                new ObjectParameter("Datumdo", datumdo) :
                new ObjectParameter("Datumdo", typeof(System.DateTime));
    
            var skladisteIDParameter = skladisteID.HasValue ?
                new ObjectParameter("SkladisteID", skladisteID) :
                new ObjectParameter("SkladisteID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<esp_Ulazi_Pretraga_Result>("esp_Ulazi_Pretraga", datumodParameter, datumdoParameter, skladisteIDParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> esp_Ulazi_Insert(string brojFakture, Nullable<System.DateTime> datum, Nullable<decimal> iznosRacuna, Nullable<decimal> pDV, string napomena, Nullable<int> skladisteID, Nullable<int> korisnikID, Nullable<int> dobavljacID)
        {
            var brojFaktureParameter = brojFakture != null ?
                new ObjectParameter("BrojFakture", brojFakture) :
                new ObjectParameter("BrojFakture", typeof(string));
    
            var datumParameter = datum.HasValue ?
                new ObjectParameter("Datum", datum) :
                new ObjectParameter("Datum", typeof(System.DateTime));
    
            var iznosRacunaParameter = iznosRacuna.HasValue ?
                new ObjectParameter("IznosRacuna", iznosRacuna) :
                new ObjectParameter("IznosRacuna", typeof(decimal));
    
            var pDVParameter = pDV.HasValue ?
                new ObjectParameter("PDV", pDV) :
                new ObjectParameter("PDV", typeof(decimal));
    
            var napomenaParameter = napomena != null ?
                new ObjectParameter("Napomena", napomena) :
                new ObjectParameter("Napomena", typeof(string));
    
            var skladisteIDParameter = skladisteID.HasValue ?
                new ObjectParameter("SkladisteID", skladisteID) :
                new ObjectParameter("SkladisteID", typeof(int));
    
            var korisnikIDParameter = korisnikID.HasValue ?
                new ObjectParameter("KorisnikID", korisnikID) :
                new ObjectParameter("KorisnikID", typeof(int));
    
            var dobavljacIDParameter = dobavljacID.HasValue ?
                new ObjectParameter("DobavljacID", dobavljacID) :
                new ObjectParameter("DobavljacID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("esp_Ulazi_Insert", brojFaktureParameter, datumParameter, iznosRacunaParameter, pDVParameter, napomenaParameter, skladisteIDParameter, korisnikIDParameter, dobavljacIDParameter);
        }
    
        public virtual ObjectResult<UlazStavke> esp_CheckNabavkaStavke_ByProizvodID(Nullable<int> ulazID, Nullable<int> proizvodID)
        {
            var ulazIDParameter = ulazID.HasValue ?
                new ObjectParameter("UlazID", ulazID) :
                new ObjectParameter("UlazID", typeof(int));
    
            var proizvodIDParameter = proizvodID.HasValue ?
                new ObjectParameter("ProizvodID", proizvodID) :
                new ObjectParameter("ProizvodID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UlazStavke>("esp_CheckNabavkaStavke_ByProizvodID", ulazIDParameter, proizvodIDParameter);
        }
    
        public virtual ObjectResult<UlazStavke> esp_CheckNabavkaStavke_ByProizvodID(Nullable<int> ulazID, Nullable<int> proizvodID, MergeOption mergeOption)
        {
            var ulazIDParameter = ulazID.HasValue ?
                new ObjectParameter("UlazID", ulazID) :
                new ObjectParameter("UlazID", typeof(int));
    
            var proizvodIDParameter = proizvodID.HasValue ?
                new ObjectParameter("ProizvodID", proizvodID) :
                new ObjectParameter("ProizvodID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UlazStavke>("esp_CheckNabavkaStavke_ByProizvodID", mergeOption, ulazIDParameter, proizvodIDParameter);
        }
    
        public virtual int esp_Delete_UlazbyID(Nullable<int> ulazID)
        {
            var ulazIDParameter = ulazID.HasValue ?
                new ObjectParameter("UlazID", ulazID) :
                new ObjectParameter("UlazID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("esp_Delete_UlazbyID", ulazIDParameter);
        }
    
        public virtual ObjectResult<esp_Izlaz_Pretraga_Result> esp_Izlaz_Pretraga(string brojRacuna, Nullable<System.DateTime> datumOd, Nullable<System.DateTime> datumDo)
        {
            var brojRacunaParameter = brojRacuna != null ?
                new ObjectParameter("BrojRacuna", brojRacuna) :
                new ObjectParameter("BrojRacuna", typeof(string));
    
            var datumOdParameter = datumOd.HasValue ?
                new ObjectParameter("DatumOd", datumOd) :
                new ObjectParameter("DatumOd", typeof(System.DateTime));
    
            var datumDoParameter = datumDo.HasValue ?
                new ObjectParameter("DatumDo", datumDo) :
                new ObjectParameter("DatumDo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<esp_Izlaz_Pretraga_Result>("esp_Izlaz_Pretraga", brojRacunaParameter, datumOdParameter, datumDoParameter);
        }
    
        public virtual ObjectResult<esp_IzlazStavke_ByIzlazID_Result> esp_IzlazStavke_ByIzlazID(Nullable<int> izlazID)
        {
            var izlazIDParameter = izlazID.HasValue ?
                new ObjectParameter("IzlazID", izlazID) :
                new ObjectParameter("IzlazID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<esp_IzlazStavke_ByIzlazID_Result>("esp_IzlazStavke_ByIzlazID", izlazIDParameter);
        }
    
        public virtual ObjectResult<esp_NarudbeStavke_SelectByNarudzbaID_Result> esp_NarudbeStavke_SelectByNarudzbaID(Nullable<int> narudzbaID)
        {
            var narudzbaIDParameter = narudzbaID.HasValue ?
                new ObjectParameter("NarudzbaID", narudzbaID) :
                new ObjectParameter("NarudzbaID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<esp_NarudbeStavke_SelectByNarudzbaID_Result>("esp_NarudbeStavke_SelectByNarudzbaID", narudzbaIDParameter);
        }
    
        public virtual int esp_NarudzbaStavke_Insert(Nullable<int> narudzbaID, Nullable<int> proizvodID, Nullable<int> kolicina, Nullable<decimal> cijenaProizvoda)
        {
            var narudzbaIDParameter = narudzbaID.HasValue ?
                new ObjectParameter("NarudzbaID", narudzbaID) :
                new ObjectParameter("NarudzbaID", typeof(int));
    
            var proizvodIDParameter = proizvodID.HasValue ?
                new ObjectParameter("ProizvodID", proizvodID) :
                new ObjectParameter("ProizvodID", typeof(int));
    
            var kolicinaParameter = kolicina.HasValue ?
                new ObjectParameter("Kolicina", kolicina) :
                new ObjectParameter("Kolicina", typeof(int));
    
            var cijenaProizvodaParameter = cijenaProizvoda.HasValue ?
                new ObjectParameter("CijenaProizvoda", cijenaProizvoda) :
                new ObjectParameter("CijenaProizvoda", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("esp_NarudzbaStavke_Insert", narudzbaIDParameter, proizvodIDParameter, kolicinaParameter, cijenaProizvodaParameter);
        }
    
        public virtual ObjectResult<esp_Narudzbe_SelectAktivne_Result> esp_Narudzbe_SelectAktivne()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<esp_Narudzbe_SelectAktivne_Result>("esp_Narudzbe_SelectAktivne");
        }
    
        public virtual ObjectResult<Nullable<decimal>> esp_Narudzbe_Insert(string brojNarudzbe, Nullable<int> kupacID, string latitude, string longitude, Nullable<int> skladisteID, string udaljenostRute, string vrijemeRute, Nullable<decimal> iznosBezPDV, Nullable<decimal> iznosSaPDV, Nullable<bool> payByCard)
        {
            var brojNarudzbeParameter = brojNarudzbe != null ?
                new ObjectParameter("BrojNarudzbe", brojNarudzbe) :
                new ObjectParameter("BrojNarudzbe", typeof(string));
    
            var kupacIDParameter = kupacID.HasValue ?
                new ObjectParameter("KupacID", kupacID) :
                new ObjectParameter("KupacID", typeof(int));
    
            var latitudeParameter = latitude != null ?
                new ObjectParameter("Latitude", latitude) :
                new ObjectParameter("Latitude", typeof(string));
    
            var longitudeParameter = longitude != null ?
                new ObjectParameter("Longitude", longitude) :
                new ObjectParameter("Longitude", typeof(string));
    
            var skladisteIDParameter = skladisteID.HasValue ?
                new ObjectParameter("SkladisteID", skladisteID) :
                new ObjectParameter("SkladisteID", typeof(int));
    
            var udaljenostRuteParameter = udaljenostRute != null ?
                new ObjectParameter("UdaljenostRute", udaljenostRute) :
                new ObjectParameter("UdaljenostRute", typeof(string));
    
            var vrijemeRuteParameter = vrijemeRute != null ?
                new ObjectParameter("VrijemeRute", vrijemeRute) :
                new ObjectParameter("VrijemeRute", typeof(string));
    
            var iznosBezPDVParameter = iznosBezPDV.HasValue ?
                new ObjectParameter("IznosBezPDV", iznosBezPDV) :
                new ObjectParameter("IznosBezPDV", typeof(decimal));
    
            var iznosSaPDVParameter = iznosSaPDV.HasValue ?
                new ObjectParameter("IznosSaPDV", iznosSaPDV) :
                new ObjectParameter("IznosSaPDV", typeof(decimal));
    
            var payByCardParameter = payByCard.HasValue ?
                new ObjectParameter("PayByCard", payByCard) :
                new ObjectParameter("PayByCard", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("esp_Narudzbe_Insert", brojNarudzbeParameter, kupacIDParameter, latitudeParameter, longitudeParameter, skladisteIDParameter, udaljenostRuteParameter, vrijemeRuteParameter, iznosBezPDVParameter, iznosSaPDVParameter, payByCardParameter);
        }
    
        public virtual int esp_Izlazi_InsertByNarudzbaID(Nullable<int> narudzbaID, Nullable<decimal> iznosSaPDV, Nullable<decimal> iznosBezPDV, Nullable<int> skladisteID, Nullable<int> korisnikID)
        {
            var narudzbaIDParameter = narudzbaID.HasValue ?
                new ObjectParameter("NarudzbaID", narudzbaID) :
                new ObjectParameter("NarudzbaID", typeof(int));
    
            var iznosSaPDVParameter = iznosSaPDV.HasValue ?
                new ObjectParameter("IznosSaPDV", iznosSaPDV) :
                new ObjectParameter("IznosSaPDV", typeof(decimal));
    
            var iznosBezPDVParameter = iznosBezPDV.HasValue ?
                new ObjectParameter("IznosBezPDV", iznosBezPDV) :
                new ObjectParameter("IznosBezPDV", typeof(decimal));
    
            var skladisteIDParameter = skladisteID.HasValue ?
                new ObjectParameter("SkladisteID", skladisteID) :
                new ObjectParameter("SkladisteID", typeof(int));
    
            var korisnikIDParameter = korisnikID.HasValue ?
                new ObjectParameter("KorisnikID", korisnikID) :
                new ObjectParameter("KorisnikID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("esp_Izlazi_InsertByNarudzbaID", narudzbaIDParameter, iznosSaPDVParameter, iznosBezPDVParameter, skladisteIDParameter, korisnikIDParameter);
        }
    
        public virtual ObjectResult<esp_Proizvodi_ByProizvodID_Result> esp_Proizvodi_ByProizvodID(Nullable<int> proizvodID)
        {
            var proizvodIDParameter = proizvodID.HasValue ?
                new ObjectParameter("ProizvodID", proizvodID) :
                new ObjectParameter("ProizvodID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<esp_Proizvodi_ByProizvodID_Result>("esp_Proizvodi_ByProizvodID", proizvodIDParameter);
        }
    
        public virtual ObjectResult<esp_GetFreshProizvodi3_Result> esp_GetFreshProizvodi3()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<esp_GetFreshProizvodi3_Result>("esp_GetFreshProizvodi3");
        }
    
        public virtual ObjectResult<esp_NarudzbaCustom_ByKupacID_Result> esp_NarudzbaCustom_ByKupacID(Nullable<int> kupacID)
        {
            var kupacIDParameter = kupacID.HasValue ?
                new ObjectParameter("KupacID", kupacID) :
                new ObjectParameter("KupacID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<esp_NarudzbaCustom_ByKupacID_Result>("esp_NarudzbaCustom_ByKupacID", kupacIDParameter);
        }
    
        public virtual ObjectResult<esp_NarudzbaStavkaCustom_ByKupacID_Result> esp_NarudzbaStavkaCustom_ByKupacID(Nullable<int> kupacID, Nullable<int> narudzbaID)
        {
            var kupacIDParameter = kupacID.HasValue ?
                new ObjectParameter("KupacID", kupacID) :
                new ObjectParameter("KupacID", typeof(int));
    
            var narudzbaIDParameter = narudzbaID.HasValue ?
                new ObjectParameter("NarudzbaID", narudzbaID) :
                new ObjectParameter("NarudzbaID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<esp_NarudzbaStavkaCustom_ByKupacID_Result>("esp_NarudzbaStavkaCustom_ByKupacID", kupacIDParameter, narudzbaIDParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> esp_Kupci_Insert(string ime, string prezime, Nullable<System.DateTime> datumRegistracije, string email, string korisnickoIme, string lozinkaHash, string lozinkaSalt, Nullable<bool> status)
        {
            var imeParameter = ime != null ?
                new ObjectParameter("Ime", ime) :
                new ObjectParameter("Ime", typeof(string));
    
            var prezimeParameter = prezime != null ?
                new ObjectParameter("Prezime", prezime) :
                new ObjectParameter("Prezime", typeof(string));
    
            var datumRegistracijeParameter = datumRegistracije.HasValue ?
                new ObjectParameter("DatumRegistracije", datumRegistracije) :
                new ObjectParameter("DatumRegistracije", typeof(System.DateTime));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var korisnickoImeParameter = korisnickoIme != null ?
                new ObjectParameter("KorisnickoIme", korisnickoIme) :
                new ObjectParameter("KorisnickoIme", typeof(string));
    
            var lozinkaHashParameter = lozinkaHash != null ?
                new ObjectParameter("LozinkaHash", lozinkaHash) :
                new ObjectParameter("LozinkaHash", typeof(string));
    
            var lozinkaSaltParameter = lozinkaSalt != null ?
                new ObjectParameter("LozinkaSalt", lozinkaSalt) :
                new ObjectParameter("LozinkaSalt", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("esp_Kupci_Insert", imeParameter, prezimeParameter, datumRegistracijeParameter, emailParameter, korisnickoImeParameter, lozinkaHashParameter, lozinkaSaltParameter, statusParameter);
        }
    
        public virtual ObjectResult<string> esp_Kupci_Check_Email(string email)
        {
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("esp_Kupci_Check_Email", emailParameter);
        }
    
        public virtual ObjectResult<esp_Proizvodi_Pretraga2_Result> esp_Proizvodi_Pretraga2(string naziv, Nullable<int> vrstaID)
        {
            var nazivParameter = naziv != null ?
                new ObjectParameter("Naziv", naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var vrstaIDParameter = vrstaID.HasValue ?
                new ObjectParameter("VrstaID", vrstaID) :
                new ObjectParameter("VrstaID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<esp_Proizvodi_Pretraga2_Result>("esp_Proizvodi_Pretraga2", nazivParameter, vrstaIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> esp_Narudzbe_GetNumber()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("esp_Narudzbe_GetNumber");
        }
    
        public virtual ObjectResult<esp_ProizvodCustom_ByID_Result> esp_ProizvodCustom_ByID(Nullable<int> proizvodID)
        {
            var proizvodIDParameter = proizvodID.HasValue ?
                new ObjectParameter("ProizvodID", proizvodID) :
                new ObjectParameter("ProizvodID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<esp_ProizvodCustom_ByID_Result>("esp_ProizvodCustom_ByID", proizvodIDParameter);
        }
    
        public virtual ObjectResult<esp_Narudzbe_MobileAktiv_Result> esp_Narudzbe_MobileAktiv(Nullable<int> kupacID)
        {
            var kupacIDParameter = kupacID.HasValue ?
                new ObjectParameter("KupacID", kupacID) :
                new ObjectParameter("KupacID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<esp_Narudzbe_MobileAktiv_Result>("esp_Narudzbe_MobileAktiv", kupacIDParameter);
        }
    
        public virtual int esp_Narudzbe_Procesirana(Nullable<int> narudzbaID)
        {
            var narudzbaIDParameter = narudzbaID.HasValue ?
                new ObjectParameter("NarudzbaID", narudzbaID) :
                new ObjectParameter("NarudzbaID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("esp_Narudzbe_Procesirana", narudzbaIDParameter);
        }
    
        public virtual ObjectResult<esp_Izlaz_Get_DobavljacID_Result> esp_Izlaz_Get_DobavljacID(Nullable<int> dostavljacID)
        {
            var dostavljacIDParameter = dostavljacID.HasValue ?
                new ObjectParameter("DostavljacID", dostavljacID) :
                new ObjectParameter("DostavljacID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<esp_Izlaz_Get_DobavljacID_Result>("esp_Izlaz_Get_DobavljacID", dostavljacIDParameter);
        }
    
        public virtual ObjectResult<esp_IzlaziStavke_GetByIzlazID_Result> esp_IzlaziStavke_GetByIzlazID(Nullable<int> izlazID)
        {
            var izlazIDParameter = izlazID.HasValue ?
                new ObjectParameter("IzlazID", izlazID) :
                new ObjectParameter("IzlazID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<esp_IzlaziStavke_GetByIzlazID_Result>("esp_IzlaziStavke_GetByIzlazID", izlazIDParameter);
        }
    
        public virtual ObjectResult<esp_Izlaz_GetZakljucene_DobavljacID_Result> esp_Izlaz_GetZakljucene_DobavljacID(Nullable<int> dostavljacID)
        {
            var dostavljacIDParameter = dostavljacID.HasValue ?
                new ObjectParameter("DostavljacID", dostavljacID) :
                new ObjectParameter("DostavljacID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<esp_Izlaz_GetZakljucene_DobavljacID_Result>("esp_Izlaz_GetZakljucene_DobavljacID", dostavljacIDParameter);
        }
    
        public virtual ObjectResult<esp_AmbalazaStavkeGet_Result> esp_AmbalazaStavkeGet(Nullable<int> izlazID)
        {
            var izlazIDParameter = izlazID.HasValue ?
                new ObjectParameter("IzlazID", izlazID) :
                new ObjectParameter("IzlazID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<esp_AmbalazaStavkeGet_Result>("esp_AmbalazaStavkeGet", izlazIDParameter);
        }
    
        public virtual ObjectResult<esp_izlaz_getByKupacOcjeni_Result> esp_izlaz_getByKupacOcjeni(Nullable<int> kupacID)
        {
            var kupacIDParameter = kupacID.HasValue ?
                new ObjectParameter("KupacID", kupacID) :
                new ObjectParameter("KupacID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<esp_izlaz_getByKupacOcjeni_Result>("esp_izlaz_getByKupacOcjeni", kupacIDParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> esp_Izlazi_Insert(string brojRacuna, Nullable<System.DateTime> datum, Nullable<int> korisnikID, Nullable<bool> zakljucen, Nullable<decimal> iznosBezPDV, Nullable<decimal> iznosSaPDV, Nullable<int> narudzbaID, Nullable<int> skladisteID, Nullable<int> dostavljacID, string udaljenostRute, string vrijemeRute, string latitude, string longitude, Nullable<bool> payByCard, Nullable<int> kupacID)
        {
            var brojRacunaParameter = brojRacuna != null ?
                new ObjectParameter("BrojRacuna", brojRacuna) :
                new ObjectParameter("BrojRacuna", typeof(string));
    
            var datumParameter = datum.HasValue ?
                new ObjectParameter("Datum", datum) :
                new ObjectParameter("Datum", typeof(System.DateTime));
    
            var korisnikIDParameter = korisnikID.HasValue ?
                new ObjectParameter("KorisnikID", korisnikID) :
                new ObjectParameter("KorisnikID", typeof(int));
    
            var zakljucenParameter = zakljucen.HasValue ?
                new ObjectParameter("Zakljucen", zakljucen) :
                new ObjectParameter("Zakljucen", typeof(bool));
    
            var iznosBezPDVParameter = iznosBezPDV.HasValue ?
                new ObjectParameter("IznosBezPDV", iznosBezPDV) :
                new ObjectParameter("IznosBezPDV", typeof(decimal));
    
            var iznosSaPDVParameter = iznosSaPDV.HasValue ?
                new ObjectParameter("IznosSaPDV", iznosSaPDV) :
                new ObjectParameter("IznosSaPDV", typeof(decimal));
    
            var narudzbaIDParameter = narudzbaID.HasValue ?
                new ObjectParameter("NarudzbaID", narudzbaID) :
                new ObjectParameter("NarudzbaID", typeof(int));
    
            var skladisteIDParameter = skladisteID.HasValue ?
                new ObjectParameter("SkladisteID", skladisteID) :
                new ObjectParameter("SkladisteID", typeof(int));
    
            var dostavljacIDParameter = dostavljacID.HasValue ?
                new ObjectParameter("DostavljacID", dostavljacID) :
                new ObjectParameter("DostavljacID", typeof(int));
    
            var udaljenostRuteParameter = udaljenostRute != null ?
                new ObjectParameter("UdaljenostRute", udaljenostRute) :
                new ObjectParameter("UdaljenostRute", typeof(string));
    
            var vrijemeRuteParameter = vrijemeRute != null ?
                new ObjectParameter("VrijemeRute", vrijemeRute) :
                new ObjectParameter("VrijemeRute", typeof(string));
    
            var latitudeParameter = latitude != null ?
                new ObjectParameter("Latitude", latitude) :
                new ObjectParameter("Latitude", typeof(string));
    
            var longitudeParameter = longitude != null ?
                new ObjectParameter("Longitude", longitude) :
                new ObjectParameter("Longitude", typeof(string));
    
            var payByCardParameter = payByCard.HasValue ?
                new ObjectParameter("PayByCard", payByCard) :
                new ObjectParameter("PayByCard", typeof(bool));
    
            var kupacIDParameter = kupacID.HasValue ?
                new ObjectParameter("KupacID", kupacID) :
                new ObjectParameter("KupacID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("esp_Izlazi_Insert", brojRacunaParameter, datumParameter, korisnikIDParameter, zakljucenParameter, iznosBezPDVParameter, iznosSaPDVParameter, narudzbaIDParameter, skladisteIDParameter, dostavljacIDParameter, udaljenostRuteParameter, vrijemeRuteParameter, latitudeParameter, longitudeParameter, payByCardParameter, kupacIDParameter);
        }
    
        public virtual int esp_Dostavljaci_Insert(string naziv, string kontaktOsoba, string adresa, string telefon, string fax, string web, string email, string ziroRacuni, string napomena, string korisnickoIme, string lozinkaSalt, string lozinkaHash)
        {
            var nazivParameter = naziv != null ?
                new ObjectParameter("Naziv", naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var kontaktOsobaParameter = kontaktOsoba != null ?
                new ObjectParameter("KontaktOsoba", kontaktOsoba) :
                new ObjectParameter("KontaktOsoba", typeof(string));
    
            var adresaParameter = adresa != null ?
                new ObjectParameter("Adresa", adresa) :
                new ObjectParameter("Adresa", typeof(string));
    
            var telefonParameter = telefon != null ?
                new ObjectParameter("Telefon", telefon) :
                new ObjectParameter("Telefon", typeof(string));
    
            var faxParameter = fax != null ?
                new ObjectParameter("Fax", fax) :
                new ObjectParameter("Fax", typeof(string));
    
            var webParameter = web != null ?
                new ObjectParameter("Web", web) :
                new ObjectParameter("Web", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var ziroRacuniParameter = ziroRacuni != null ?
                new ObjectParameter("ZiroRacuni", ziroRacuni) :
                new ObjectParameter("ZiroRacuni", typeof(string));
    
            var napomenaParameter = napomena != null ?
                new ObjectParameter("Napomena", napomena) :
                new ObjectParameter("Napomena", typeof(string));
    
            var korisnickoImeParameter = korisnickoIme != null ?
                new ObjectParameter("KorisnickoIme", korisnickoIme) :
                new ObjectParameter("KorisnickoIme", typeof(string));
    
            var lozinkaSaltParameter = lozinkaSalt != null ?
                new ObjectParameter("LozinkaSalt", lozinkaSalt) :
                new ObjectParameter("LozinkaSalt", typeof(string));
    
            var lozinkaHashParameter = lozinkaHash != null ?
                new ObjectParameter("LozinkaHash", lozinkaHash) :
                new ObjectParameter("LozinkaHash", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("esp_Dostavljaci_Insert", nazivParameter, kontaktOsobaParameter, adresaParameter, telefonParameter, faxParameter, webParameter, emailParameter, ziroRacuniParameter, napomenaParameter, korisnickoImeParameter, lozinkaSaltParameter, lozinkaHashParameter);
        }
    
        public virtual ObjectResult<Kupci> esp_Dostavljaci_CheckKupciEmail(string email)
        {
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Kupci>("esp_Dostavljaci_CheckKupciEmail", emailParameter);
        }
    
        public virtual ObjectResult<Kupci> esp_Dostavljaci_CheckKupciEmail(string email, MergeOption mergeOption)
        {
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Kupci>("esp_Dostavljaci_CheckKupciEmail", mergeOption, emailParameter);
        }
    
        public virtual ObjectResult<Kupci> esp_Dostavljaci_CheckKupciKorisnickoIme(string korisnickoIme)
        {
            var korisnickoImeParameter = korisnickoIme != null ?
                new ObjectParameter("KorisnickoIme", korisnickoIme) :
                new ObjectParameter("KorisnickoIme", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Kupci>("esp_Dostavljaci_CheckKupciKorisnickoIme", korisnickoImeParameter);
        }
    
        public virtual ObjectResult<Kupci> esp_Dostavljaci_CheckKupciKorisnickoIme(string korisnickoIme, MergeOption mergeOption)
        {
            var korisnickoImeParameter = korisnickoIme != null ?
                new ObjectParameter("KorisnickoIme", korisnickoIme) :
                new ObjectParameter("KorisnickoIme", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Kupci>("esp_Dostavljaci_CheckKupciKorisnickoIme", mergeOption, korisnickoImeParameter);
        }
    
        public virtual ObjectResult<Dostavljaci> esp_Kupci_CheckDostavljaciEmail(string email)
        {
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Dostavljaci>("esp_Kupci_CheckDostavljaciEmail", emailParameter);
        }
    
        public virtual ObjectResult<Dostavljaci> esp_Kupci_CheckDostavljaciEmail(string email, MergeOption mergeOption)
        {
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Dostavljaci>("esp_Kupci_CheckDostavljaciEmail", mergeOption, emailParameter);
        }
    
        public virtual ObjectResult<Dostavljaci> esp_Kupci_CheckDostavljaciKorisnickoIme(string korisnickoIme)
        {
            var korisnickoImeParameter = korisnickoIme != null ?
                new ObjectParameter("KorisnickoIme", korisnickoIme) :
                new ObjectParameter("KorisnickoIme", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Dostavljaci>("esp_Kupci_CheckDostavljaciKorisnickoIme", korisnickoImeParameter);
        }
    
        public virtual ObjectResult<Dostavljaci> esp_Kupci_CheckDostavljaciKorisnickoIme(string korisnickoIme, MergeOption mergeOption)
        {
            var korisnickoImeParameter = korisnickoIme != null ?
                new ObjectParameter("KorisnickoIme", korisnickoIme) :
                new ObjectParameter("KorisnickoIme", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Dostavljaci>("esp_Kupci_CheckDostavljaciKorisnickoIme", mergeOption, korisnickoImeParameter);
        }
    
        public virtual int esp_Narudzbe_Otkazana(Nullable<int> narudzbaID)
        {
            var narudzbaIDParameter = narudzbaID.HasValue ?
                new ObjectParameter("NarudzbaID", narudzbaID) :
                new ObjectParameter("NarudzbaID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("esp_Narudzbe_Otkazana", narudzbaIDParameter);
        }
    
        public virtual ObjectResult<esp_Narudzbe_PonistiCC_Result> esp_Narudzbe_PonistiCC(string kupac, string brojNarudzbe, Nullable<bool> payByCard)
        {
            var kupacParameter = kupac != null ?
                new ObjectParameter("Kupac", kupac) :
                new ObjectParameter("Kupac", typeof(string));
    
            var brojNarudzbeParameter = brojNarudzbe != null ?
                new ObjectParameter("BrojNarudzbe", brojNarudzbe) :
                new ObjectParameter("BrojNarudzbe", typeof(string));
    
            var payByCardParameter = payByCard.HasValue ?
                new ObjectParameter("PayByCard", payByCard) :
                new ObjectParameter("PayByCard", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<esp_Narudzbe_PonistiCC_Result>("esp_Narudzbe_PonistiCC", kupacParameter, brojNarudzbeParameter, payByCardParameter);
        }
    
        public virtual ObjectResult<esp_Dostavljac_Pretraga_Result> esp_Dostavljac_Pretraga(string naziv)
        {
            var nazivParameter = naziv != null ?
                new ObjectParameter("Naziv", naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<esp_Dostavljac_Pretraga_Result>("esp_Dostavljac_Pretraga", nazivParameter);
        }
    
        public virtual ObjectResult<esp_SkadisteGetIzlazi_zastaanje_Result> esp_SkadisteGetIzlazi_zastaanje(Nullable<int> skladisteID)
        {
            var skladisteIDParameter = skladisteID.HasValue ?
                new ObjectParameter("SkladisteID", skladisteID) :
                new ObjectParameter("SkladisteID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<esp_SkadisteGetIzlazi_zastaanje_Result>("esp_SkadisteGetIzlazi_zastaanje", skladisteIDParameter);
        }
    
        public virtual ObjectResult<esp_SkadisteGetUlazi_zastaanje_Result> esp_SkadisteGetUlazi_zastaanje(Nullable<int> skladisteID)
        {
            var skladisteIDParameter = skladisteID.HasValue ?
                new ObjectParameter("SkladisteID", skladisteID) :
                new ObjectParameter("SkladisteID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<esp_SkadisteGetUlazi_zastaanje_Result>("esp_SkadisteGetUlazi_zastaanje", skladisteIDParameter);
        }
    }
}
